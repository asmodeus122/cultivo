-- 🧠 Substitua pelos nomes reais após usar o hook (__namecall)
local RemoteNames = {
    Cultivate = "Cultivate",               -- exemplo
    Breakthrough = "BreakthroughAttempt",  -- exemplo
    RP = "GiveRP",                         -- exemplo
    Rebirth = "Rebirth"                    -- <== nome do Remote para renascer
}

-- 🔄 Flags de ativação
local autoCultivate = false
local autoBreakthrough = false
local autoRP = false
local autoRebirth = false

-- 🔁 Loop: Auto Cultivar
task.spawn(function()
    while true do
        if autoCultivate then
            pcall(function()
                game.ReplicatedStorage:WaitForChild(RemoteNames.Cultivate):FireServer()
            end)
        end
        task.wait(1)
    end
end)

-- 🔁 Loop: Auto Breakthrough
task.spawn(function()
    while true do
        if autoBreakthrough then
            pcall(function()
                game.ReplicatedStorage:WaitForChild(RemoteNames.Breakthrough):FireServer()
            end)
        end
        task.wait(3)
    end
end)

-- 🔁 Loop: Auto RP
task.spawn(function()
    while true do
        if autoRP then
            pcall(function()
                game.ReplicatedStorage:WaitForChild(RemoteNames.RP):FireServer(1000)
            end)
        end
        task.wait(1.5)
    end
end)

-- 🔁 Loop: Auto Renascer
task.spawn(function()
    while true do
        if autoRebirth then
            pcall(function()
                game.ReplicatedStorage:WaitForChild(RemoteNames.Rebirth):FireServer()
            end)
        end
        task.wait(5) -- tempo maior por segurança
    end
end)

-- 🧱 Mod Menu (Drawing API)
local function CreateToggle(text, position, callback)
    local button = Drawing.new("Text")
    button.Text = "[ OFF ] " .. text
    button.Position = position
    button.Size = 20
    button.Color = Color3.fromRGB(255, 255, 255)
    button.Center = false
    button.Outline = true
    button.Visible = true

    local state = false

    game:GetService("UserInputService").InputBegan:Connect(function(input, gpe)
        if gpe then return end
        local mouse = game:GetService("UserInputService"):GetMouseLocation()
        local x, y = mouse.X, mouse.Y
        if x >= position.X and x <= position.X + 150 and y >= position.Y and y <= position.Y + 20 then
            state = not state
            button.Text = state and "[ ON  ] " .. text or "[ OFF ] " .. text
            callback(state)
        end
    end)

    return button
end

-- ☑️ Criar os botões
CreateToggle("Auto Cultivar", Vector2.new(100, 100), function(state)
    autoCultivate = state
end)

CreateToggle("Auto Breakthrough", Vector2.new(100, 130), function(state)
    autoBreakthrough = state
end)

CreateToggle("Auto RP 1000x", Vector2.new(100, 160), function(state)
    autoRP = state
end)

CreateToggle("Auto Rebirth", Vector2.new(100, 190), function(state)
    autoRebirth = state
end)
